Notes to myself while working though
https://mooseframework.inl.gov/getting_started/examples_and_tutorials/tutorial02_multiapps/index.html

5/2/2023T
I read the tutorial, and it looks to me like I will need to learn about the moose objects
that the MultiApp blocks are using.
I think the idea is to build directly from the .i files in the tutorials folder of my moose clone,
and I may be able to pick up more info in the test/tests and framework/src folders.

The kernels are documented:
https://mooseframework.inl.gov/source/kernels/Diffusion.html
https://mooseframework.inl.gov/source/kernels/TimeDerivative.html
https://mooseframework.inl.gov/source/kernels/BodyForce.html
The documents cross reference all the modules, tutorials and tests where they are used.

The instructions are
  Run 01_parent.i
    Look at the order of execution
    Inspect outputs
    Modify execute_on to see what happens

I have activated my moose virtual environment in one terminal window.
(moose) rogerfrye@Rogers-Laptop step01_multiapps % pwd
/Users/rogerfrye/Documents/Git/moose/tutorials/tutorial02_multiapps/step01_multiapps

I decided to run 01_sub.i directly first:
% time ../../../test/moose_test-opt -i 01_sub.i
Execution Information:
  Executioner:             Transient
  TimeStepper:             ConstantDT
  TimeIntegrator:          ImplicitEuler
  Solver Mode:             Preconditioned JFNK
  PETSc Preconditioner:    hypre boomeramg 
Time Step 0, time = 0

Time Step 1, time = 1, dt = 1
 0 Nonlinear |R| = 3.077070e+00
...      4 Linear |R| = 1.140542e-06
 1 Nonlinear |R| = 1.147170e-06
...      4 Linear |R| = 3.724331e-13
 2 Nonlinear |R| = 3.775971e-13
 Solve Converged!

Time Step 2, time = 2, dt = 1
 0 Nonlinear |R| = 4.848676e-02
...      4 Linear |R| = 2.614335e-08
 1 Nonlinear |R| = 2.624665e-08
...      4 Linear |R| = 7.009931e-15
 2 Nonlinear |R| = 7.105908e-15
 Solve Converged!
../../../test/moose_test-opt -i 01_sub.i  0.12s user 0.04s system 83% cpu 0.180 total
-rw-r--r--   1 rogerfrye  staff  43136 May  2 10:14 01_sub_out.e

I have another terminal window where I have activated my peacock virtual environment/
(peacock) rogerfrye@Rogers-Laptop step01_multiapps % ../../../python/peacock/peacock -r 01_sub_out.e
Only the v variable is available in a 3 step video.
Final step shows the usual horizontal diffusion rainbow cold to hot.
on a 10x10 grid from 0.0 to 1.0 because those are the boundary conditions.

Back in the moose tutorial terminal:
% time ../../../test/moose_test-opt -i 01_parent.i
The Execution section is the same
New Prallelism section
sub_app0: Parallelism:
...
sub_app0: Time Step 0, time = 0
Time Step 0, time = 0
Time Step 1, time = 1, dt = 1
sub_app0: 
sub_app0: Time Step 1, time = 1, dt = 1
sub_app0:  0 Nonlinear |R| = 3.077070e+00
sub_app0:  1 Nonlinear |R| = 1.147170e-06
sub_app0:  2 Nonlinear |R| = 3.775971e-13
sub_app0:  Solve Converged!
 0 Nonlinear |R| = 9.246621e-02
...      4 Linear |R| = 4.947314e-08
 1 Nonlinear |R| = 4.950753e-08
 ...      4 Linear |R| = 1.515028e-14
 2 Nonlinear |R| = 1.515345e-14
 Solve Converged!
Time Step 2, time = 2, dt = 1
...      4 Linear |R| = 1.533611e-15
 2 Nonlinear |R| = 1.549491e-15
 Solve Converged!
 As expected the parent and sub interleave.
../../../test/moose_test-opt -i 01_parent.i  0.13s user 0.03s system 96% cpu 0.165 total
-rw-r--r--   1 rogerfrye  staff  49536 May  2 10:31 01_parent_out.e
rw-r--r--   1 rogerfrye  staff  42340 May  2 10:31 01_parent_out_sub_app0.e

Peacock on 01_parent_out.e shows u variable on 10x10 grid from 0.0 to 1.0
but the horizontal diffusion is cold on edges and hot in center,
because the BCs are 0 on the edges, and parent has a BodyForce kernel of 1.

peacock -r 01_parent_out_sub_app0.e shows only blue. Don't know why???

Instructions say: Modify execute_on to see what happens.
I don't know how to do that. Looked in 
https://mooseframework.inl.gov/source/interfaces/SetupInterface.html
I tried, but failed with
% time ../../../test/moose_test-opt -i 01_parent.i Executioner/execute_on=final
*** ERROR ***
CLI_ARGS:1: unused parameter 'Executioner/execute_on'

% time ../../../test/moose_test-opt -i 02_parent_sublimit.i
As expected, it runs both at dt = 0.2 because sub has smaller timestep.
../../../test/moose_test-opt -i 02_parent_sublimit.i  0.19s user 0.05s system 98% cpu 0.241 total
-rw-r--r--   1 rogerfrye  staff  57356 May  2 11:10 02_parent_sublimit_out.e
-rw-r--r--   1 rogerfrye  staff  50156 May  2 11:10 02_parent_sublimit_out_sub_app0.e

% time ../../../test/moose_test-opt -i 03_parent_subcycle.i
As expected it runs 5 subs for each parent.

Peacock on parent shows 10 timesteps with increasing definition.
Peacock on sub shows 10 timesteps with increasingly defined rainbow.

../../../test/moose_test-opt -i 03_parent_subcycle.i  0.16s user 0.04s system 97% cpu 0.213 total
I don't want to modify one of the dt values in the .i file, and I don't know how to select on command line.
so skip that experiment.

Run 04_parent_multiple.i which has
[MultiApps]
  [sub_app]
    type = TransientMultiApp
    positions   = '0 0 0  1 0 0  2 0 0'
#    positions_file = 04_positions.txt
    input_files = '04_sub1_multiple.i'
#    input_files = '04_sub1_multiple.i  04_sub2_multiple.i 04_sub3_multiple.i'
#    output_in_position = true
  []
[]

% time ../../../test/moose_test-opt -i 04_parent_multiple.i
04_sub1_multiple.i is used for all 3 sub_app positions.
It runs sub_app0, sub_app1, sub_app2, parent and repeats for Time Step2
../../../test/moose_test-opt -i 04_parent_multiple.i  0.19s user 0.11s system 29% cpu 0.996 total
-rw-r--r--   1 rogerfrye  staff  49628 May  2 19:07 04_parent_multiple_out.e
-rw-r--r--   1 rogerfrye  staff  42348 May  2 19:07 04_parent_multiple_out_sub_app0.e
-rw-r--r--   1 rogerfrye  staff  42348 May  2 19:07 04_parent_multiple_out_sub_app1.e
-rw-r--r--   1 rogerfrye  staff  42348 May  2 19:07 04_parent_multiple_out_sub_app2.e

Peacock on parent shows time 0, 1, 2 with increasing definition.
The 3 subs look identical. I don't understand what positions do. Maybe virtual identifiers?

Modify 04_parent_multiple.i to use 3 different sub files with right BCs 1, 2, 3.
The run log seems the same as before.
../../../test/moose_test-opt -i 04_parent_multiple.i  0.18s user 0.04s system 97% cpu 0.225 total
Peacock shows the sub files with Max 1, 2, 3.

Uncomment output_in_position.
The run log seems the same as before.
../../../test/moose_test-opt -i 04_parent_multiple.i  0.18s user 0.04s system 97% cpu 0.224 total
I don't see any difference in peacock.
I would think the offsets are in a 3r dimension, but looking at 2D. I don't get it????

5/3/2023W
Run 05_parent_parallel.i

First repeat 04_parent_multiple with refinement so runs long enough to measure
% time mpiexec -n 1 ../../../test/moose_test-opt -i 04_parent_multiple.i -r 6
  Nodes:                   410881
  Elems:                   409600
mpiexec -n 1 ../../../test/moose_test-opt -i 04_parent_multiple.i -r 6  120.08s user 1.67s system 99% cpu 2:01.78 total
Acrtivity monitor was showing spikes on performance cores 3-6 at different times.
-rw-r--r--   1 rogerfrye  staff  26343552 May  3 06:13 04_parent_multiple_out.e
-rw-r--r--   1 rogerfrye  staff  26336028 May  3 06:12 04_parent_multiple_out_sub_app0.e
-rw-r--r--   1 rogerfrye  staff  26336028 May  3 06:12 04_parent_multiple_out_sub_app1.e
-rw-r--r--   1 rogerfrye  staff  26336028 May  3 06:12 04_parent_multiple_out_sub_app2.e

Then rerun with -r 0 to reduce size of .e files to <50KB

Oh, I see. This wasn't necessary. 05_parent_parallel.i mesh is 40^3 = 64,000
[Mesh]
  type = GeneratedMesh
  dim = 3
  nx = 40
  ny = 40
  nz = 40
[]
and outputs PerfGraph
% time mpiexec -n 1 ../../../test/moose_test-opt -i 05_parent_parallel.i
  Nodes:                   68921
  Elems:                   64000
Total 21.249, Solve 16.719, MultiApps 12.166, cpu 21.508
-rw-r--r--   1 rogerfrye  staff  5497168 May  3 06:30 05_parent_parallel_out.e
-rw-r--r--   1 rogerfrye  staff  5489888 May  3 06:30 05_parent_parallel_out_sub_app0.e
-rw-r--r--   1 rogerfrye  staff  5489888 May  3 06:30 05_parent_parallel_out_sub_app1.e
-rw-r--r--   1 rogerfrye  staff  5489888 May  3 06:30 05_parent_parallel_out_sub_app2.e

% time mpiexec -n 3 ../../../test/moose_test-opt -i 05_parent_parallel.i
outputs 3 PerfGraphs with spikes in Performance cores 3-6
mpiexec -n 3 ../../../test/moose_test-opt -i 05_parent_parallel.i  66.63s user 0.98s system 297% cpu 22.749 total

% time mpiexec -n 6 ../../../test/moose_test-opt -i 05_parent_parallel.i
Parallelism:
  Num Processors:          1
  Num Threads:             1
sub_app0: Parallelism:
sub_app0:   Num Processors:          1
sub_app0:   Num Threads:             1

Why no parallelism, an why no speedup????

outputs 6 PerfGraphs with spikes in Performance cores 3-10
mpiexec -n 6 ../../../test/moose_test-opt -i 05_parent_parallel.i  134.02s user 2.05s system 585% cpu 23.229 total
Peacock shows cubes with rainbows in one dimension.

I don't see difference with --keep-cout, but ran in same terminal so might have missed.
mpiexec -n 6 ../../../test/moose_test-opt -i 05_parent_parallel.i --keep-cout  133.89s user 1.91s system 586% cpu 23.147 total

% time mpiexec -n 6 ../../../test/moose_test-opt -i 05_parent_parallel.i --keep-cout --n-threads=2
Parallelism:
  Num Processors:          1
  Num Threads:             2
sub_app0: Parallelism:
sub_app0:   Num Processors:          1
sub_app0:   Num Threads:             2
Activity monitor shows spikes in all 10 cores including efficiencympiexec -n 6 ../../../test/moose_test-opt -i 05_parent_parallel.i --keep-cout  mpiexec -n 6 ../../../test/moose_test-opt -i 05_parent_parallel.i --keep-cout  150.42s user 3.40s system 848% cpu 18.134 total

% time mpiexec -n 1 ../../../test/moose_test-opt -i 05_parent_parallel.i --keep-cout --n-threads=3
Spikes in Performance Cores 3-5
One PerfGraph: Total 10.321, Solve 6.574, MultiApps 4.813, cpu 10.601

% time mpiexec -n 1 ../../../test/moose_test-opt -i 05_parent_parallel.i --keep-cout --n-threads=6
Spikes in all 10 Cores
One PerfGraph: Total 8.122, Solve 4.348, MultiApps 3.173, cpu 8.423

% time mpiexec -n 1 ../../../test/moose_test-opt -i 05_parent_parallel.i --keep-cout --n-threads=8
Spikes in all 10 Cores
One PerfGraph: Total 7.852, Solve 4.081, MultiApps 3.078, cpu 8.139

% time mpiexec -n 1 ../../../test/moose_test-opt -i 05_parent_parallel.i --keep-cout --n-threads=9
Spikes in all 10 Cores
One PerfGraph: Total 7.718, Solve 4.008, MultiApps 2.994, cpu 8.014

% time mpiexec -n 1 ../../../test/moose_test-opt -i 05_parent_parallel.i --keep-cout --n-threads=10
Took longer
% time mpiexec -n 1 ../../../test/moose_test-opt -i 05_parent_parallel.i --keep-cout --n-threads=12
Took longer

So 9 threads reduced cpu time from 21.508 sec to 8.014, a factor of 2.7.

Run 06_parent_twoapps.i
Note how the apps execute
Run in parallel with 6, 12, 24 procs

